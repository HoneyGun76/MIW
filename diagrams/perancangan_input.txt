PERANCANGAN INPUT SISTEM MIW TRAVEL BERBASIS RAILWAY
===========================================================================

1. Struktur Form Pendaftaran Jamaah
   Sistem MIW Travel memiliki dua form pendaftaran utama untuk jamaah: form_umroh.php dan form_haji.php. Setiap form dirancang dengan pendekatan user-friendly dan terstruktur dalam beberapa bagian informasi (informasi pribadi, data paspor, kontak darurat, dll). Form menggunakan metode POST untuk mengirim data ke handler yang sesuai (submit_umroh.php atau submit_haji.php). Penggunaan atribut HTML5 seperti required, pattern, dan type memungkinkan validasi dasar di sisi klien. Form juga mendukung file upload dengan atribut enctype="multipart/form-data" untuk menangani dokumen pendukung seperti KTP dan KK.

2. Kategori Input Data Jamaah
   Data input jamaah dikelompokkan menjadi beberapa kategori: (1) Data Identitas (NIK, nama, tempat/tanggal lahir, jenis kelamin), (2) Data Kontak (alamat, kode pos, nomor telepon, email), (3) Data Keluarga (nama ayah, nama ibu), (4) Data Fisik (tinggi badan, berat badan), (5) Data Paspor (nomor paspor, nama di paspor, tanggal berlaku), (6) Data Kontak Darurat, (7) Data Pemesanan Paket (jenis paket, program pilihan, tipe kamar), dan (8) Data Pembayaran. Struktur ini memastikan pengumpulan data yang komprehensif untuk keperluan administrasi, manifest, dan kebutuhan operasional perjalanan umroh dan haji.

3. Validasi Input Client-Side
   Validasi client-side diterapkan menggunakan kombinasi HTML5 validation attributes dan JavaScript. NIK divalidasi dengan pattern="[0-9]{16}" untuk memastikan format 16 digit angka. Email divalidasi menggunakan type="email" dan regex JavaScript tambahan. File upload divalidasi untuk ukuran maksimum (2MB) dan jenis file yang diizinkan (JPG, PNG, PDF). Validasi lain mencakup pemeriksaan field required, batasan panjang input, dan format tanggal. Fungsi validateForm() di setiap form menjalankan validasi komprehensif sebelum pengiriman, mencegah pengiriman form yang tidak valid ke server.

4. Validasi Input Server-Side
   Server-side validation dilakukan di file handler submit_umroh.php dan submit_haji.php. Sistem memvalidasi kelengkapan field required, format NIK (16 digit), keunikan NIK di database, dan format email yang valid. Upload file divalidasi untuk tipe MIME, ekstensi, dan ukuran maksimum. Validasi lanjutan mencakup pengecekan keberadaan package ID dan room type di database. Semua error validasi dikumpulkan dalam array $errors yang kemudian dikembalikan ke form jika ditemukan masalah, bersama dengan input yang sudah dimasukkan pengguna untuk memfasilitasi koreksi tanpa mengisi ulang seluruh form.

5. Penanganan File Upload
   File upload ditangani oleh kelas UploadHandler yang dirancang khusus untuk lingkungan Railway. Sistem mendukung upload dokumen identitas (KTP, KK, paspor) dengan beberapa lapisan validasi: verifikasi tipe MIME, pengecekan ekstensi (.jpg, .png, .pdf), dan batasan ukuran (2MB). Nama file yang diupload dibuat unik menggunakan fungsi generateCustomFilename() yang menggabungkan NIK, jenis dokumen, dan ID paket. File disimpan dalam struktur direktori persistent storage di Railway (/app/uploads/documents/) untuk memastikan file tetap tersedia meskipun container di-restart.

6. Persistensi Data Input
   Data yang lolos validasi disimpan dalam database MySQL menggunakan Prepared Statements PDO untuk mencegah SQL injection. Query insert dibangun secara dinamis berdasarkan array data yang telah divalidasi. System menggunakan transaksi database untuk memastikan atomicityâ€”jika ada error saat penyimpanan data atau file, seluruh transaksi akan di-rollback. Metadata file upload juga disimpan di tabel file_metadata untuk pelacakan dan pengelolaan file. Kode validasi khusus mengkonversi string kosong menjadi NULL untuk field integer opsional menggunakan helper function intOrNull.

7. Mekanisme Feedback Input
   Sistem menyediakan feedback kepada pengguna melalui beberapa mekanisme: (1) Alert JavaScript untuk validasi client-side, (2) Pesan error di bagian atas form untuk validasi server-side, (3) Field yang sudah diisi tetap terisi jika terjadi error validasi (persistence of input), (4) Pesan sukses setelah pendaftaran berhasil. Error validasi ditampilkan sebagai list dengan detail spesifik untuk setiap kesalahan. Format feedback konsisten antara form umroh dan haji untuk memberikan user experience yang seragam. Semua pesan error dan pesan sukses dienkode dengan htmlspecialchars untuk mencegah XSS.

8. Dynamic Form Elements
   Form pendaftaran memiliki elemen dinamis yang diperbarui melalui JavaScript. Misalnya, saat memilih paket umroh/haji (pak_id), sistem secara otomatis memperbarui dropdown tipe kamar (type_room_pilihan), tanggal keberangkatan, dan perhitungan biaya. Terdapat juga toggle fields untuk marketing_type; jika pengguna memilih "Saya mendaftar sendiri/Mandiri", field marketing_nama dan marketing_hp akan otomatis terisi dengan data pengunjung dan menjadi read-only. Form juga menampilkan biaya dalam format terbilang menggunakan fungsi terbilang() dari PHP yang terintegrasi dengan JavaScript untuk update real-time.

9. Input Sanitization
   Semua input user disanitasi untuk mencegah security vulnerabilities. Pada server-side, input disanitasi melalui InputValidator::sanitizeArray($_POST) yang membersihkan input dari potensi kode berbahaya. Output data ke halaman menggunakan htmlspecialchars() untuk mencegah XSS. Data sensitif seperti NIK dan informasi pribadi dilogikakan secara aman; NIK yang gagal karena duplikasi akan dicatat dengan IP address untuk tujuan keamanan. JSON data yang digunakan dalam atribut data-package di-encode dengan JSON_HEX_APOS dan JSON_HEX_QUOT untuk mencegah breaking HTML attributes.

10. Skema Pemilihan Paket dan Kamar
    Pemilihan paket perjalanan mengimplementasikan cascading selection, di mana user pertama memilih jenis paket (umroh/haji), kemudian program spesifik, dan terakhir tipe kamar. Data paket diambil dari database dengan informasi lengkap termasuk harga untuk setiap tipe kamar (quad, triple, double). Setiap opsi paket disimpan dengan data JSON dalam atribut data-package, memungkinkan JavaScript mengekstrak dan menggunakan informasi ini tanpa query tambahan ke server. Saat tipe kamar dipilih, harga otomatis diperbarui dan ditampilkan dalam format angka dan terbilang. Sistem ini memastikan konsistensi harga antara yang ditampilkan dan yang tersimpan di database.

11. Error Handling dan Logging
    Sistem menerapkan multilevel error handling: (1) try-catch blocks untuk exception handling, (2) validasi input komprehensif, (3) transaksi database untuk rollback jika terjadi error, (4) logging error ke file log dengan error_log(). Informasi error pada NIK duplikat, koneksi database, dan kegagalan upload dicatat dengan detail untuk troubleshooting, termasuk timestamp dan IP address. Di lingkungan production (Railway), error details tidak ditampilkan ke user tetapi tetap dicatat dalam log. Fungsi error handling berbeda antara lingkungan development dan production, diatur melalui deteksi environment di config.php.

12. Pemrosesan Data Post-Submission
    Setelah data berhasil disimpan, sistem melakukan beberapa post-processing: (1) mengirim email konfirmasi ke jamaah dengan rincian pendaftaran dan instruksi pembayaran menggunakan EmailService, (2) menyiapkan data untuk invoice yang dapat diakses oleh jamaah, (3) mencatat aktivitas pendaftaran untuk reporting admin, (4) redirect user ke halaman sukses dengan pesan konfirmasi. Proses ini memastikan bahwa jamaah segera mendapatkan konfirmasi dan instruksi lanjutan, sementara admin mendapatkan notifikasi tentang pendaftaran baru untuk ditindaklanjuti dalam proses operasional MIW Travel.

13. Cross-Form Consistency
    Desain input system menerapkan konsistensi antar form untuk pengalaman pengguna yang mulus. Form umroh dan haji berbagi struktur, validasi, dan perilaku yang sama, dengan perbedaan hanya pada field spesifik untuk masing-masing jenis perjalanan. Library JavaScript dan fungsi validasi digunakan ulang antar form untuk memastikan konsistensi. Style visual, pesan error, dan alur kerja form juga diseragamkan. Konsistensi ini mempermudah pengguna yang pernah mengisi satu jenis form untuk mengisi form lainnya, serta menyederhanakan maintenance dan update sistem di masa depan.
